{"version":3,"sources":["components/card/card.js","components/services/services.js","components/card-list/card-list.js","components/big-card/big-card.js","components/app-search-panel/app-search-panel.js","components/app/app.js","index.js"],"names":["Card","this","props","poster_path","title","original_title","overview","vote_average","release_date","id","imgPath","path","className","href","src","alt","slice","React","Component","getResource","url","a","fetch","res","ok","Error","status","json","apiKey","CardList","state","error","isLoaded","items","resource","query","URLSearchParams","window","location","search","get","pageTitle","then","response","setState","results","message","notFound","length","films","map","post","BigCard","currentId","match","params","AppSearchPanel","method","action","onChange","handleChange","type","name","placeholder","required","App","basename","process","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bbcd715e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.css'\r\n\r\nexport default class Card extends React.Component {\r\n\r\n    render() {\r\n        const {poster_path, title, original_title, overview, vote_average, release_date, id} = this.props;\r\n        const imgPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\r\n        const path = `/#/movie/${id}`;\r\n\r\n        return (\r\n                <>\r\n                <a className=\"film-link-page\" href={path} >\r\n                    <img \r\n                        src = {imgPath}\r\n                        alt=''\r\n                        className=\"film-img-page\"\r\n                    /> \r\n                </a>\r\n                    \r\n                    <div className=\"film-header-page \">\r\n                        <a className=\"film-link-page\" href={path} >\r\n                            <div className=\"film-header-title-page\">\r\n                                <h2 className=\"film-title-page\" >{title}</h2>\r\n                                <h4 className=\"film-subtitle-page \">{original_title}</h4>\r\n                            </div>\r\n                        </a>\r\n                        <span className=\"film-vote-page\">{vote_average}</span>\r\n                    </div>\r\n                    <p className=\"film-descriprtion-page\">{overview.slice(0,520) + `...`}</p>\r\n                    <p className=\"film-date\">{release_date}</p>\r\n                </>\r\n        )\r\n    }\r\n}","export async function getResource (url)  {\r\n    const res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n}\r\n\r\nexport const apiKey = '132095608c2685653ffbc176e0851cd7';","import React from 'react';\r\nimport Card from '../card/card';\r\nimport { getResource, apiKey } from '../services/services';\r\n\r\nimport './card-list.css'\r\n\r\nexport default class CardList extends React.Component {\r\n    state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n    };\r\n    pageTitle;\r\n\r\n\r\n    componentDidMount() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const query = urlParams.get('q');\r\n\r\n        let resource;\r\n        if (this.props.path === 'main') {\r\n            resource = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&page=1&language=ru`;\r\n            this.pageTitle = 'Top movies';\r\n        } else if (this.props.path === 'search') {\r\n            resource = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`;\r\n            this.pageTitle = `Results for ${query}`;\r\n        }\r\n\r\n        getResource(resource)\r\n        .then((response) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: response.results\r\n            });\r\n        },(error) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            });\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const { error, isLoaded, items } = this.state;\r\n        \r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            let notFound;\r\n            if (items.length < 1){\r\n                notFound = <div className=\"not-found\">Not Found</div>\r\n            }\r\n            const films = items.map((post)=>{\r\n                const {id} = post;\r\n                return (\r\n                    <div key={id} className=\"film-wrapper\">\r\n                            <Card {...post} />\r\n                    </div>\r\n                )\r\n            });\r\n            return (\r\n                <>\r\n                <h1 className=\"page-title\" >{this.pageTitle}</h1>\r\n                <div className=\"page\">\r\n                    {notFound}\r\n                    {films}\r\n                </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { getResource, apiKey } from '../services/services';\r\n\r\nimport './big-card.css';\r\n\r\nexport default class BigCard extends React.Component {\r\n    state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n\r\n    componentDidMount() {\r\n        const currentId = this.props.match.params.id;\r\n\r\n        getResource(`https://api.themoviedb.org/3/movie/${currentId}?api_key=${apiKey}&language=ru`)\r\n        .then(response => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: response\r\n              });\r\n        },(error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n        });\r\n    }\r\n        \r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            const {poster_path, title, original_title, overview, vote_average, release_date} = items;\r\n            const imgPath = `https://image.tmdb.org/t/p/w500/${poster_path}`;\r\n            \r\n            return (\r\n                <>\r\n                    <div className=\"film-header\">\r\n                        <img \r\n                            src = {imgPath}\r\n                            alt=''\r\n                            className=\"film-img\"\r\n                        />\r\n                        <div className=\"film-info\">\r\n                            <div className=\"film-header-title\">\r\n                                <div>\r\n                                    <h2 className=\"film-title\" >{title}</h2>\r\n                                    <h4 className=\"film-subtitle\">{original_title}</h4>\r\n                                </div>\r\n                                <span className=\"film-vote\">{vote_average}</span>\r\n                            </div>\r\n                            <p className=\"film-descriprtion\">{overview}</p>\r\n                            <p className=\"film-date\">{release_date}</p>\r\n                        </div>\r\n                    </div>\r\n                </> \r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nimport './app-search-panel.css';\r\n\r\nexport default class AppSearchPanel extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <form method=\"GET\" action=\"/search\" className=\"search-panel\">\r\n                <input \r\n                    onChange={this.handleChange} \r\n                    type=\"text\"\r\n                    name=\"q\"\r\n                    placeholder=\"Enter here\"\r\n                    className=\"search-input\"\r\n                    required\r\n                />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"search-button\"\r\n                    >Search</button>\r\n            </form>\r\n        )\r\n    }   \r\n}\r\n","import React from 'react';\r\nimport CardList from '../card-list/card-list';\r\nimport BigCard from '../big-card/big-card';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport AppSearchPanel from '../app-search-panel/app-search-panel';\r\n\r\n\r\nimport './app.css';\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n                <div className=\"container\">\r\n                    <a href='/' className=\"main-button\">Home</a>\r\n                    <AppSearchPanel />\r\n                    <>\r\n                        <Route exact path='/' render={() => <CardList path={'main'}/>} />\r\n                        <Route exact path='/search' render={() => <CardList path={'search'}/>} />\r\n                        <Route exact path='/#/movie' component={BigCard}/>\r\n                    </>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}